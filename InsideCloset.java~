/**
* The culmination of all other classes defined in this project. 
*
* @author  Nic Locklear
* @version 1.2
* @since   2021-04-03
*/

//TODO: Error in how constructor accesses values. arrayindex out of bounds. 
import java.util.ArrayList;
import java.util.Scanner; 
import java.io.*;
public class InsideCloset {
  private ArrayList<Label<String, Clothing>> myCloset = new ArrayList<>();
  private ArrayList<String> clothing = new ArrayList<>();
  
  private InsideCloset(){
    clothing.add("Graphic T-Shirt");
    clothing.add("Jeans");
    clothing.add("Legging");
    clothing.add("Shorts");
    clothing.add("Sweater");
    clothing.add("Tank Top");
  }
    
  public InsideCloset(String filename){  
    try{
      Scanner opencsv = new Scanner(new File(filename));
      /** I HAD a short and compact way of writing this
        * but i couldnt figure out how to include a thrown exception, so I scrapped it. 
        * 
        * Steps:
        * 1} checks if the first cell == a clothing type
        * 2} sets all needed params 
        * 3) initializes a new object of type [CLOTHING NAME]
        * 4) passes it all into a generic, adds to the mycloset array
        */      
      while (opencsv.hasNextLine()){ //returns a boolean value
        String[] splitline = opencsv.nextLine().split(",");
        try{
          if(splitline[0].equalsIgnoreCase("Graphic T-Shirt")){
            String size = splitline[splitline.length - 1];
            String style = splitline[1];
            String description = splitline[2];              
            String color = ""; 
            for(int i = 3; i< splitline.length -1; ++i){
              if ( i == splitline.length -2){
                color += (splitline[i]);
              }
              else{
                color += (splitline[i] + " ");
              }
            } 
            GraphicTshirt tee = new GraphicTshirt((new Graphic(style, description)), Integer.valueOf(size), color);
            myCloset.add(new Label<>("Graphic T-Shirt", tee));
          }
          
          else if(splitline[0].equalsIgnoreCase("Tank Top")){
            String size = splitline[splitline.length - 1];             
            String color = ""; 
            for(int i = 2; i< splitline.length - 1; ++i){
              if ( i == splitline.length -2){
                color += (splitline[i]);
              }
              else{
                color += (splitline[i] + " ");
              }
            } 
            TankTop tee = new TankTop(splitline[1], Integer.valueOf(size), color);
            myCloset.add(new Label<>("Tank Top", tee));
          } 
          
          else if(splitline[0].equalsIgnoreCase("Jeans")){
            String size = splitline[splitline.length - 1];             
            String color = "";
            JEANFIT jeanfit = null;
            for (JEANFIT c : JEANFIT.values()) {
              if (c.name().equalsIgnoreCase(splitline[1])) {
                jeanfit = c;
              }
            }            
            for(int i = 2; i< splitline.length - 1; ++i){
              if ( i == splitline.length -2){
                color += (splitline[i]);
              }
              else{
                color += (splitline[i] + " ");
              }
            }
            Jeans x = new Jeans(Integer.valueOf(size), color, jeanfit);
            myCloset.add(new Label<>("Jeans", x));
          }
          
          else if(splitline[0].equalsIgnoreCase("Legging")){
            String size = splitline[splitline.length - 1];             
            String color = "";
            String fit = splitline[1];
            for(int i = 2; i< splitline.length - 1; ++i){
              if ( i == splitline.length -2){
                color += (splitline[i]);
              }
              else{
                color += (splitline[i] + " ");
              }
            }
            Legging x = new Legging(Integer.valueOf(size), color, fit);
            myCloset.add(new Label<>("Legging", x));              
          }
          
          else if(splitline[0].equalsIgnoreCase("Shorts")){
            String size = splitline[splitline.length - 1];             
            String color = "";
            String fit = splitline[1];
            for(int i = 2; i< splitline.length -1; ++i){
              if ( i == splitline.length -2){
                color += (splitline[i]);
              }
              else{
                color += (splitline[i] + " ");
              }
            }
            Shorts x = new Shorts(Integer.valueOf(size), color, fit);
            this.myCloset.add(new Label<>("Shorts", x));              
          }
          
          else if(splitline[0].equalsIgnoreCase("Sweater")){
            String size = splitline[splitline.length - 1];             
            String color = "";
            SWEATERTYPE type = null;
            for (SWEATERTYPE c : SWEATERTYPE.values()) {
              if (c.name().equalsIgnoreCase(splitline[1])) {
                type = c;
              }
            }
            for(int i = 2; i< splitline.length-1; ++i){
              if ( i == splitline.length -2){
                color += (splitline[i]);
              }
              else{
                color += (splitline[i] + " ");
              }
            } 
            Sweater x = new Sweater(type, Integer.valueOf(size), color);
            this.myCloset.add(new Label<>("Sweater", x));                
          }
          else{
            throw new ClothingException("ClothingException: invalid item");
          }
        }
        catch(ClothingException E){
          System.err.println(E);
        }
      }
      opencsv.close();  //closes the scanner
    }
    catch(FileNotFoundException  e){
      System.err.println(e);
    } 
  }
  
  public void printWholeCloset(){
    for(Label i : myCloset){
      System.out.println(i.getValue().toString());
    } 
  }

  public void printSpecificClothing(String item){
    String[] clothing = new String[]{"Graphic T-Shirt", "Jeans", "Legging", "Shorts", "Sweater", "Tank Top"};
    boolean check = false;
    try{
      for(int i = 0; i < myCloset.size(); ++i){
        check = false;
        if(item.equalsIgnoreCase(myCloset.get(i).getKey())){
          check = true;
          System.out.println(myCloset.get(i).getValue().toString());
        }
        else{
          continue;
        }
      }
      if( check == false){
        throw new ClothingException("invalid item");
      }

    }
    catch(ClothingException e){
      System.err.println(e);
    }
  }
        
  public ArrayList<Clothing> organizedCloset(){
    ArrayList<Clothing> clothes = new ArrayList<Clothing>();
    String[] clothing = new String[]{"Graphic T-Shirt", "Jeans", "Legging", "Shorts", "Sweater", "Tank Top"};
    for(String x : clothing){
      for(int i = 0; i < myCloset.size(); ++i){
        if(myCloset.get(i).getKey().equalsIgnoreCase(x)){
          clothes.add(myCloset.get(i).getValue());
        }
        else{
          continue;
        }
      }
    }
    return clothes;
  }
  
  
  public ArrayList<Clothing> colorCoordinate(String item, String color) throws ClothingException{
    ArrayList<Clothing> clothes = new ArrayList<Clothing>();
    try{
      if(clothing.contains(item) == true){
        
      }
      else{
        throw new ClothingException("ClothingException: invalid item");
      }
    }   
    catch(ClothingException e){
      System.err.println(e);
    }
    return clothes;
  }  

}

